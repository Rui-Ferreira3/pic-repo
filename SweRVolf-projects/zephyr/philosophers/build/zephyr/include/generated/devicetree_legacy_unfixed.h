/*
 * Generated by gen_legacy_defines.py
 *
 * DTS input file:
 *   swervolf_nexys.dts.pre.tmp
 *
 * Directories with bindings:
 *   /root/RVfpgaSoC/Labs/LabProjects/SweRVolf/fusesoc_libraries/swervolf/zephyr/dts/bindings, $ZEPHYR_BASE/dts/bindings
 *
 * Nodes in dependency order (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /chosen
 *   3   /memory@0
 *   4   /cpus
 *   5   /cpus/cpu@0
 *   6   /leds
 *   7   /soc
 *   8   /soc/gpio@80001010
 *   9   /leds/led
 *   10  /soc/interrupt-controller@f00c0000
 *   11  /soc/uart@80002000
 *   12  /soc/spi@80001040
 *   13  /soc/spi@80001040/flash@0
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by tree-wide information (active compatibles, chosen nodes,
 * etc.).
 */

/*
 * Devicetree node:
 *   /
 *
 * No matching binding.
 *
 * Dependency Ordinal: 0
 *
 * Supports:
 *   1   /aliases
 *   2   /chosen
 *   4   /cpus
 *   6   /leds
 *   3   /memory@0
 *   7   /soc
 */

/*
 * Devicetree node:
 *   /aliases
 *
 * No matching binding.
 *
 * Dependency Ordinal: 1
 *
 * Requires:
 *   0   /
 */

/*
 * Devicetree node:
 *   /chosen
 *
 * No matching binding.
 *
 * Dependency Ordinal: 2
 *
 * Requires:
 *   0   /
 */

/*
 * Devicetree node:
 *   /memory@0
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE/dts/bindings/sram/mmio-sram.yaml
 *
 * Dependency Ordinal: 3
 *
 * Requires:
 *   0   /
 *
 * Description:
 *   Generic on-chip SRAM description
 */
#define DT_MMIO_SRAM_0_BASE_ADDRESS                 0x0
#define DT_INST_0_MMIO_SRAM_BASE_ADDRESS            DT_MMIO_SRAM_0_BASE_ADDRESS
#define DT_MMIO_SRAM_0_SIZE                         8388608
#define DT_INST_0_MMIO_SRAM_SIZE                    DT_MMIO_SRAM_0_SIZE
#define DT_INST_0_MMIO_SRAM                         1

/*
 * Devicetree node:
 *   /cpus
 *
 * No matching binding.
 *
 * Dependency Ordinal: 4
 *
 * Requires:
 *   0   /
 *
 * Supports:
 *   5   /cpus/cpu@0
 */

/*
 * Devicetree node:
 *   /cpus/cpu@0
 *
 * No matching binding.
 *
 * Dependency Ordinal: 5
 *
 * Requires:
 *   4   /cpus
 */

/*
 * Devicetree node:
 *   /leds
 *
 * Binding (compatible = gpio-leds):
 *   $ZEPHYR_BASE/dts/bindings/gpio/gpio-leds.yaml
 *
 * Dependency Ordinal: 6
 *
 * Requires:
 *   0   /
 *
 * Supports:
 *   9   /leds/led
 *
 * Description:
 *   GPIO LEDs parent node
 */
#define DT_INST_0_GPIO_LEDS                         1

/*
 * Devicetree node:
 *   /soc
 *
 * No matching binding.
 *
 * Dependency Ordinal: 7
 *
 * Requires:
 *   0   /
 *
 * Supports:
 *   8   /soc/gpio@80001010
 *   10  /soc/interrupt-controller@f00c0000
 *   12  /soc/spi@80001040
 *   11  /soc/uart@80002000
 */

/*
 * Devicetree node:
 *   /soc/gpio@80001010
 *
 * Binding (compatible = swervolf,gpio):
 *   /root/RVfpgaSoC/Labs/LabProjects/SweRVolf/fusesoc_libraries/swervolf/zephyr/dts/bindings/gpio/swervolf,gpio.yaml
 *
 * Dependency Ordinal: 8
 *
 * Requires:
 *   7   /soc
 *
 * Supports:
 *   9   /leds/led
 *
 * Description:
 *   SweRVolf GPIO
 */
#define DT_SWERVOLF_GPIO_80001010_BASE_ADDRESS      0x80001010
#define DT_INST_0_SWERVOLF_GPIO_BASE_ADDRESS        DT_SWERVOLF_GPIO_80001010_BASE_ADDRESS
#define DT_SWERVOLF_GPIO_80001010_SIZE              16
#define DT_INST_0_SWERVOLF_GPIO_SIZE                DT_SWERVOLF_GPIO_80001010_SIZE
/* Human readable string describing the device (used as device_get_binding() argument) */
#define DT_SWERVOLF_GPIO_80001010_LABEL             "FPGA_LED0"
#define DT_INST_0_SWERVOLF_GPIO_LABEL               DT_SWERVOLF_GPIO_80001010_LABEL
/* Number of gpios supported */
#define DT_SWERVOLF_GPIO_80001010_NGPIOS            32
#define DT_INST_0_SWERVOLF_GPIO_NGPIOS              DT_SWERVOLF_GPIO_80001010_NGPIOS
#define DT_INST_0_SWERVOLF_GPIO                     1

/*
 * Devicetree node:
 *   /leds/led
 *
 * Binding (compatible = gpio-leds):
 *   $ZEPHYR_BASE/dts/bindings/gpio/gpio-leds.yaml
 *
 * Dependency Ordinal: 9
 *
 * Requires:
 *   6   /leds
 *   8   /soc/gpio@80001010
 *
 * Description:
 *   GPIO LED child node
 */
#define DT_GPIO_LEDS_LED_GPIOS_CONTROLLER           "FPGA_LED0"
#define DT_ALIAS_LED0_GPIOS_CONTROLLER              DT_GPIO_LEDS_LED_GPIOS_CONTROLLER
#define DT_GPIO_LEDS_LED0_GPIOS_CONTROLLER          DT_GPIO_LEDS_LED_GPIOS_CONTROLLER
#define DT_GPIO_LEDS_LED_GPIOS_PIN                  0
#define DT_ALIAS_LED0_GPIOS_PIN                     DT_GPIO_LEDS_LED_GPIOS_PIN
#define DT_GPIO_LEDS_LED0_GPIOS_PIN                 DT_GPIO_LEDS_LED_GPIOS_PIN
#define DT_GPIO_LEDS_LED_GPIOS_FLAGS                0
#define DT_ALIAS_LED0_GPIOS_FLAGS                   DT_GPIO_LEDS_LED_GPIOS_FLAGS
#define DT_GPIO_LEDS_LED0_GPIOS_FLAGS               DT_GPIO_LEDS_LED_GPIOS_FLAGS
#define DT_GPIO_LEDS_LED_GPIOS                      {"FPGA_LED0", 0, 0}
#define DT_ALIAS_LED0_GPIOS                         DT_GPIO_LEDS_LED_GPIOS
#define DT_GPIO_LEDS_LED0_GPIOS                     DT_GPIO_LEDS_LED_GPIOS
/* Human readable string describing the device (used as device_get_binding() argument) */
#define DT_GPIO_LEDS_LED_LABEL                      "Red LED"
#define DT_ALIAS_LED0_LABEL                         DT_GPIO_LEDS_LED_LABEL
#define DT_GPIO_LEDS_LED0_LABEL                     DT_GPIO_LEDS_LED_LABEL

/*
 * Devicetree node:
 *   /soc/interrupt-controller@f00c0000
 *
 * Binding (compatible = swerv,pic):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/swerv,pic.yaml
 *
 * Dependency Ordinal: 10
 *
 * Requires:
 *   7   /soc
 *
 * Supports:
 *   11  /soc/uart@80002000
 *
 * Description:
 *   SweRV EH1 PIC (Programmable Interrupt Controller)
 */
#define DT_SWERV_PIC_F00C0000_BASE_ADDRESS          0xf00c0000
#define DT_INST_0_SWERV_PIC_BASE_ADDRESS            DT_SWERV_PIC_F00C0000_BASE_ADDRESS
#define DT_SWERV_PIC_F00C0000_REG_BASE_ADDRESS      DT_SWERV_PIC_F00C0000_BASE_ADDRESS
#define DT_INST_0_SWERV_PIC_REG_BASE_ADDRESS        DT_SWERV_PIC_F00C0000_BASE_ADDRESS
#define DT_SWERV_PIC_F00C0000_SIZE                  8192
#define DT_INST_0_SWERV_PIC_SIZE                    DT_SWERV_PIC_F00C0000_SIZE
#define DT_SWERV_PIC_F00C0000_REG_SIZE              DT_SWERV_PIC_F00C0000_SIZE
#define DT_INST_0_SWERV_PIC_REG_SIZE                DT_SWERV_PIC_F00C0000_SIZE
/* maximum interrupt priority */
#define DT_SWERV_PIC_F00C0000_RISCV_MAX_PRIORITY    15
#define DT_INST_0_SWERV_PIC_RISCV_MAX_PRIORITY      DT_SWERV_PIC_F00C0000_RISCV_MAX_PRIORITY
/* name of each register space */
#define DT_SWERV_PIC_F00C0000_REG_NAMES_0           "reg"
#define DT_INST_0_SWERV_PIC_REG_NAMES_0             DT_SWERV_PIC_F00C0000_REG_NAMES_0
#define DT_INST_0_SWERV_PIC                         1

/*
 * Devicetree node:
 *   /soc/uart@80002000
 *
 * Binding (compatible = ns16550):
 *   $ZEPHYR_BASE/dts/bindings/serial/ns16550.yaml
 *
 * Dependency Ordinal: 11
 *
 * Requires:
 *   7   /soc
 *   10  /soc/interrupt-controller@f00c0000
 *
 * Description:
 *   ns16550 UART
 */
#define DT_NS16550_80002000_BASE_ADDRESS            0x80002000
#define DT_INST_0_NS16550_BASE_ADDRESS              DT_NS16550_80002000_BASE_ADDRESS
#define DT_NS16550_80002000_CONTROL_BASE_ADDRESS    DT_NS16550_80002000_BASE_ADDRESS
#define DT_INST_0_NS16550_CONTROL_BASE_ADDRESS      DT_NS16550_80002000_BASE_ADDRESS
#define DT_NS16550_80002000_SIZE                    4096
#define DT_INST_0_NS16550_SIZE                      DT_NS16550_80002000_SIZE
#define DT_NS16550_80002000_CONTROL_SIZE            DT_NS16550_80002000_SIZE
#define DT_INST_0_NS16550_CONTROL_SIZE              DT_NS16550_80002000_SIZE
#define DT_NS16550_80002000_IRQ_0                   12
#define DT_INST_0_NS16550_IRQ_0                     DT_NS16550_80002000_IRQ_0
#define DT_NS16550_80002000_IRQ_0_PRIORITY          15
#define DT_INST_0_NS16550_IRQ_0_PRIORITY            DT_NS16550_80002000_IRQ_0_PRIORITY
/* attached via PCI(e) bus */
#define DT_NS16550_80002000_PCIE                    0
#define DT_INST_0_NS16550_PCIE                      DT_NS16550_80002000_PCIE
/* Clock frequency information for UART operation */
#define DT_NS16550_80002000_CLOCK_FREQUENCY         50000000
#define DT_INST_0_NS16550_CLOCK_FREQUENCY           DT_NS16550_80002000_CLOCK_FREQUENCY
/* Initial baud rate setting for UART */
#define DT_NS16550_80002000_CURRENT_SPEED           115200
#define DT_INST_0_NS16550_CURRENT_SPEED             DT_NS16550_80002000_CURRENT_SPEED
/* Human readable string describing the device (used as device_get_binding() argument) */
#define DT_NS16550_80002000_LABEL                   "uart0"
#define DT_INST_0_NS16550_LABEL                     DT_NS16550_80002000_LABEL
/* Set to enable RTS/CTS flow control at boot time */
#define DT_NS16550_80002000_HW_FLOW_CONTROL         0
#define DT_INST_0_NS16550_HW_FLOW_CONTROL           DT_NS16550_80002000_HW_FLOW_CONTROL
/* name of each register space */
#define DT_NS16550_80002000_REG_NAMES_0             "control"
#define DT_INST_0_NS16550_REG_NAMES_0               DT_NS16550_80002000_REG_NAMES_0
#define DT_INST_0_NS16550                           1

/*
 * Devicetree node:
 *   /soc/spi@80001040
 *
 * Binding (compatible = opencores,spi-simple):
 *   $ZEPHYR_BASE/dts/bindings/spi/opencores,spi-simple.yaml
 *
 * Dependency Ordinal: 12
 *
 * Requires:
 *   7   /soc
 *
 * Supports:
 *   13  /soc/spi@80001040/flash@0
 *
 * Description:
 *   OpenCores Simple SPI controller
 */
#define DT_OPENCORES_SPI_SIMPLE_80001040_BASE_ADDRESS 0x80001040
#define DT_INST_0_OPENCORES_SPI_SIMPLE_BASE_ADDRESS DT_OPENCORES_SPI_SIMPLE_80001040_BASE_ADDRESS
#define DT_OPENCORES_SPI_SIMPLE_80001040_CONTROL_BASE_ADDRESS DT_OPENCORES_SPI_SIMPLE_80001040_BASE_ADDRESS
#define DT_INST_0_OPENCORES_SPI_SIMPLE_CONTROL_BASE_ADDRESS DT_OPENCORES_SPI_SIMPLE_80001040_BASE_ADDRESS
#define DT_OPENCORES_SPI_SIMPLE_80001040_SIZE       64
#define DT_INST_0_OPENCORES_SPI_SIMPLE_SIZE         DT_OPENCORES_SPI_SIMPLE_80001040_SIZE
#define DT_OPENCORES_SPI_SIMPLE_80001040_CONTROL_SIZE DT_OPENCORES_SPI_SIMPLE_80001040_SIZE
#define DT_INST_0_OPENCORES_SPI_SIMPLE_CONTROL_SIZE DT_OPENCORES_SPI_SIMPLE_80001040_SIZE
/* Human readable string describing the device (used as device_get_binding() argument) */
#define DT_OPENCORES_SPI_SIMPLE_80001040_LABEL      "SPI0"
#define DT_INST_0_OPENCORES_SPI_SIMPLE_LABEL        DT_OPENCORES_SPI_SIMPLE_80001040_LABEL
/* name of each register space */
#define DT_OPENCORES_SPI_SIMPLE_80001040_REG_NAMES_0 "control"
#define DT_INST_0_OPENCORES_SPI_SIMPLE_REG_NAMES_0  DT_OPENCORES_SPI_SIMPLE_80001040_REG_NAMES_0
#define DT_INST_0_OPENCORES_SPI_SIMPLE              1

/*
 * Devicetree node:
 *   /soc/spi@80001040/flash@0
 *
 * Binding (compatible = jedec,spi-nor):
 *   $ZEPHYR_BASE/dts/bindings/mtd/jedec,spi-nor.yaml
 *
 * Dependency Ordinal: 13
 *
 * Requires:
 *   12  /soc/spi@80001040
 *
 * Description:
 *   Properties supporting Zephyr spi-nor flash driver (over the Zephyr SPI
 *   API) control of serial flash memories using the standard M25P80-based
 *   command set.
 */
#define DT_OPENCORES_SPI_SIMPLE_80001040_JEDEC_SPI_NOR_0_BASE_ADDRESS 0x0
#define DT_INST_0_JEDEC_SPI_NOR_BASE_ADDRESS        DT_OPENCORES_SPI_SIMPLE_80001040_JEDEC_SPI_NOR_0_BASE_ADDRESS
/* Maximum clock frequency of device's SPI interface in Hz */
#define DT_OPENCORES_SPI_SIMPLE_80001040_JEDEC_SPI_NOR_0_SPI_MAX_FREQUENCY 2000000
#define DT_INST_0_JEDEC_SPI_NOR_SPI_MAX_FREQUENCY   DT_OPENCORES_SPI_SIMPLE_80001040_JEDEC_SPI_NOR_0_SPI_MAX_FREQUENCY
/* Human readable string describing the device (used as device_get_binding() argument) */
#define DT_OPENCORES_SPI_SIMPLE_80001040_JEDEC_SPI_NOR_0_LABEL "FLASH0"
#define DT_INST_0_JEDEC_SPI_NOR_LABEL               DT_OPENCORES_SPI_SIMPLE_80001040_JEDEC_SPI_NOR_0_LABEL
/* JEDEC ID as manufacturer ID, memory type, memory density */
#define DT_OPENCORES_SPI_SIMPLE_80001040_JEDEC_SPI_NOR_0_JEDEC_ID {0x01, 0x20, 0x18}
#define DT_INST_0_JEDEC_SPI_NOR_JEDEC_ID            DT_OPENCORES_SPI_SIMPLE_80001040_JEDEC_SPI_NOR_0_JEDEC_ID
/* Not used after Zephyr 2.3.0 */
#define DT_OPENCORES_SPI_SIMPLE_80001040_JEDEC_SPI_NOR_0_HAS_BE32K 0
#define DT_INST_0_JEDEC_SPI_NOR_HAS_BE32K           DT_OPENCORES_SPI_SIMPLE_80001040_JEDEC_SPI_NOR_0_HAS_BE32K
/*
 * Indicates the device requires the ULBPR (0x98) command.
 *
 * Some flash chips such as the Microchip SST26VF series have a block
 * protection register that initializes to write-protected.  Use this
 * property to indicate that the BPR must be unlocked before write
 * operations can proceed.
 */
#define DT_OPENCORES_SPI_SIMPLE_80001040_JEDEC_SPI_NOR_0_REQUIRES_ULBPR 0
#define DT_INST_0_JEDEC_SPI_NOR_REQUIRES_ULBPR      DT_OPENCORES_SPI_SIMPLE_80001040_JEDEC_SPI_NOR_0_REQUIRES_ULBPR
/*
 * Indicates the device supports the DPD (0xB9) command.
 *
 * Use this property to indicate the flash chip supports the Deep
 * Power-Down mode that is entered by command 0xB9 to reduce power
 * consumption below normal standby levels.  Use of this property
 * implies that the RDPD (0xAB) Release from Deep Power Down command
 * is also supported.  (On some chips this command functions as Read
 * Electronic Signature; see t-enter-dpd).
 */
#define DT_OPENCORES_SPI_SIMPLE_80001040_JEDEC_SPI_NOR_0_HAS_DPD 0
#define DT_INST_0_JEDEC_SPI_NOR_HAS_DPD             DT_OPENCORES_SPI_SIMPLE_80001040_JEDEC_SPI_NOR_0_HAS_DPD
/* flash capacity in bits */
#define DT_OPENCORES_SPI_SIMPLE_80001040_JEDEC_SPI_NOR_0_SIZE 16777216
#define DT_INST_0_JEDEC_SPI_NOR_SIZE                DT_OPENCORES_SPI_SIMPLE_80001040_JEDEC_SPI_NOR_0_SIZE
#define DT_OPENCORES_SPI_SIMPLE_80001040_JEDEC_SPI_NOR_0_BUS_NAME "SPI0"
#define DT_INST_0_JEDEC_SPI_NOR_BUS_NAME            DT_OPENCORES_SPI_SIMPLE_80001040_JEDEC_SPI_NOR_0_BUS_NAME
#define DT_OPENCORES_SPI_SIMPLE_80001040_JEDEC_SPI_NOR_0_Macro is deprecated DT_OPENCORES_SPI_SIMPLE_80001040_JEDEC_SPI_NOR_0_BUS_NAME
#define DT_INST_0_JEDEC_SPI_NOR_Macro is deprecated DT_OPENCORES_SPI_SIMPLE_80001040_JEDEC_SPI_NOR_0_BUS_NAME
#define DT_JEDEC_SPI_NOR_BUS_SPI                    1
#define DT_INST_0_JEDEC_SPI_NOR                     1

/* Compatibles appearing on enabled nodes */
#define DT_COMPAT_CHIPSALLIANCE_SWERV_EH1_V1_2      1
#define DT_COMPAT_CHIPSALLIANCE_SWERVOLF_SOC        1
#define DT_COMPAT_CHIPSALLIANCE_SWERVOLF_NEXYS      1
#define DT_COMPAT_GPIO_LEDS                         1
#define DT_COMPAT_JEDEC_SPI_NOR                     1
#define DT_COMPAT_MMIO_SRAM                         1
#define DT_COMPAT_NS16550                           1
#define DT_COMPAT_OPENCORES_SPI_SIMPLE              1
#define DT_COMPAT_RISCV                             1
#define DT_COMPAT_SIMPLE_BUS                        1
#define DT_COMPAT_SWERV_PIC                         1
#define DT_COMPAT_SWERVOLF_GPIO                     1

/* /chosen/zephyr,flash (missing) */
#define DT_FLASH_BASE_ADDRESS                       0
#define DT_FLASH_SIZE                               0

/* /chosen/zephyr,code-partition (missing) */
#define DT_CODE_PARTITION_OFFSET                    0
#define DT_CODE_PARTITION_SIZE                      0
